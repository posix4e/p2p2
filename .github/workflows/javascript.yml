name: JavaScript

on:
  push:
    branches: [ main ]
    paths:
      - 'js/**'
      - '.github/workflows/javascript.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'js/**'
      - '.github/workflows/javascript.yml'

defaults:
  run:
    working-directory: js

jobs:
  test:
    name: Node.js Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        cache: 'npm'
        cache-dependency-path: js/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Lint
      run: npm run lint
      
    - name: Type check
      run: npm run typecheck
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      
    - name: Setup virtual display
      run: |
        echo "Starting Xvfb setup..."
        export DISPLAY=:99
        echo "DISPLAY set to: $DISPLAY"
        
        # Install xvfb if not present
        sudo apt-get update
        sudo apt-get install -y xvfb x11-utils
        
        # Start Xvfb in background
        Xvfb :99 -screen 0 1280x1024x24 -ac +extension GLX +render -noreset &
        XVFB_PID=$!
        echo "Xvfb started with PID: $XVFB_PID"
        
        # Wait for Xvfb to fully start
        echo "Waiting for Xvfb to initialize..."
        for i in {1..30}; do
          if xdpyinfo -display :99 >/dev/null 2>&1; then
            echo "✓ Display :99 is accessible after $i seconds"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "✗ Display :99 is not accessible after 30 seconds"
            ps aux | grep Xvfb
            echo "Checking if Xvfb process is still running..."
            if ps -p $XVFB_PID > /dev/null; then
              echo "Xvfb process is running but display not accessible"
            else
              echo "Xvfb process has died"
            fi
            exit 1
          fi
          sleep 1
        done
        
        # Show display info
        echo "Display information:"
        xdpyinfo -display :99 | head -20
      
    - name: Run Playwright tests
      run: |
        echo "Running tests with DISPLAY=$DISPLAY"
        npm test -- --reporter=line
      env:
        DNS: ${{ secrets.CLOUDFLARE_DNS }}
        ZONEID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        API: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        DISPLAY: :99
        DEBUG: pw:browser*,pw:protocol
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-node-${{ matrix.node-version }}
        path: js/playwright-report/
        retention-days: 30
